name: Tariffs Updater (Daily)

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  build-and-publish:
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref_name }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Build tariffs JSON
        run: npm run build:tariffs

      - name: Sanity check secrets
        run: |
          test -n "${{ secrets.SUPABASE_URL }}" || { echo "Missing SUPABASE_URL"; exit 1; }
          test -n "${{ secrets.SUPABASE_SERVICE_ROLE }}" || { echo "Missing SUPABASE_SERVICE_ROLE"; exit 1; }

      - name: Upload to Supabase Storage
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}
          STORAGE_BUCKET: public_
          STORAGE_PATH: tariffs/tariffs-2025.json
        run: |
          set -e

          # Pick whichever file exists (builder may write to either location)
          FILE=""
          if [ -f "public/data/tariffs-2025.json" ]; then
            FILE="public/data/tariffs-2025.json"
          elif [ -f "updater/out/tariffs-2025.json" ]; then
            FILE="updater/out/tariffs-2025.json"
          fi

          if [ -z "$FILE" ]; then
            echo "tariffs-2025.json not found in expected locations"; exit 1;
          fi

          echo "Uploading $FILE to $SUPABASE_URL/storage/v1/object/$STORAGE_BUCKET/$STORAGE_PATH"
          code=$(curl -sS -X POST "$SUPABASE_URL/storage/v1/object/$STORAGE_BUCKET/$STORAGE_PATH" \
            -H "Authorization: Bearer $SUPABASE_SERVICE_ROLE" \
            -H "apikey: $SUPABASE_SERVICE_ROLE" \
            -H "x-upsert: true" \
            -H "Content-Type: application/json" \
            --data-binary @"$FILE" \
            -o /dev/null -w "%{http_code}")

          if [ "$code" != "200" ] && [ "$code" != "201" ]; then
            echo "Upload failed with HTTP $code"; exit 1;
          fi

